plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version "1.9.22"
    id("org.jetbrains.intellij") version "1.17.2"
}

group = "org.zeith"
version = file("VERSION.txt").text

repositories {
    mavenCentral()
}

// Configure Gradle IntelliJ Plugin
// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellij {
    version.set("2024.2.0.2")
    type.set("IC") // Target IDE Platform

    plugins.set(["com.intellij.java"])
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks {
    // Set the JVM compatibility versions
    tasks.withType(JavaCompile) {
        sourceCompatibility = "21"
        targetCompatibility = "21"
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions.jvmTarget = "21"
    }

    patchPluginXml {
        sinceBuild.set("232")
        untilBuild.set("232.*")
        changeNotes.set(file("CHANGELOG.txt").text)
    }

    signPlugin {
        certificateChain.set(System.getenv("CERTIFICATE_CHAIN"))
        privateKey.set(System.getenv("PRIVATE_KEY"))
        password.set(System.getenv("PRIVATE_KEY_PASSWORD"))
    }

    publishPlugin {
        token.set(System.getenv("PUBLISH_TOKEN"))
    }
}

tasks.register('uploadPlugin') {
    notCompatibleWithConfigurationCache("Yes.")
    doLast {
        def pluginDir = "R:\\zeith-jbr\\org.zeith.hammerhelper";

        def fn = "hammerhelper-${version}.zip"
        file("build/distributions/${fn}")
                .renameTo(file("${pluginDir}\\${fn}"))

        file("${pluginDir}\\__changelog.txt").setText(file("CHANGELOG.txt").text)
    }
}

afterEvaluate {
    tasks["build"].finalizedBy(uploadPlugin)
}